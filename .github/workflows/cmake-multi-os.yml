name: CMake

on:
  push:
    branches: '**'
  pull_request:
    branches: [ "main" ]
  release:
    types: [created]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Install Qt on Windows
        if: matrix.os == 'windows-latest'
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.7.2'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
          modules: 'qtscxml'

      - name: Install Qt on macOS
        if: matrix.os == 'macos-latest'
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.7.2'
          host: 'mac'
          target: 'desktop'
          arch: 'clang_64'
          modules: 'qtscxml'

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}}

      - name: Install Application (macOS)
        if: matrix.os == 'macos-latest'
        run: cmake --install ${{github.workspace}}/build --prefix ${{github.workspace}}/build/install

      - name: Upload .app Bundle
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: Minesweeper.app
          path: ${{github.workspace}}/build/install/Applications/Minesweeper.app

      - name: Package Windows Installer with CPack
        if: matrix.os == 'windows-latest'
        working-directory: ${{github.workspace}}/build
        run: cpack -C ${{env.BUILD_TYPE}}

      - name: Upload Windows Installer
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: Minesweeper-win64-installer.exe
          path: ${{github.workspace}}/build/Minesweeper-*-win64.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: Minesweeper.app
          path: ./

      - name: Download Windows Installer
        uses: actions/download-artifact@v3
        with:
          name: Minesweeper-win64-installer.exe
          path: ./

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: "Release of Minesweeper version ${{ github.ref_name }}"
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS .app to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Minesweeper.app
          asset_name: Minesweeper.app
          asset_content_type: application/x-macosx-app
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows Installer to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Minesweeper-win64-installer.exe
          asset_name: Minesweeper-win64-installer.exe
          asset_content_type: application/x-msdownload
          token: ${{ secrets.GITHUB_TOKEN }}