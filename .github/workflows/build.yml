name: build

on:
  push:
    branches: '**'
  pull_request:
    branches: [ "main" ]
  workflow_call:

env:
  BUILD_TYPE: Release
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Install Qt on Windows
        if: matrix.os == 'windows-latest'
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.7.2'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
          modules: 'qtscxml'

      - name: Install Qt on macOS
        if: matrix.os == 'macos-latest'
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.7.2'
          host: 'mac'
          target: 'desktop'
          arch: 'clang_64'
          modules: 'qtscxml'

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}}

      - name: Install Application (macOS)
        if: matrix.os == 'macos-latest'
        run: cmake --install ${{github.workspace}}/build

      - name: Upload .app Bundle
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: minesweeper.app
          path: ${{github.workspace}}/build/minesweeper.app

      - name: Package Windows Installer with CPack
        if: matrix.os == 'windows-latest'
        working-directory: ${{github.workspace}}/build
        run: cpack -C ${{env.BUILD_TYPE}}

      - name: Upload Windows Installer
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: Minesweeper-win64-installer.exe
          path: ${{github.workspace}}/build/Minesweeper-*-win64.exe